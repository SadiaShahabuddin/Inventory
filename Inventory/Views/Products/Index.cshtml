@model IEnumerable<Inventory.Models.Product>

@{
    ViewData["Title"] = "Index";
    List<Category> category = (List<Category>)ViewBag.CategoryId;

}

<div class="card card-default color-palette-box">
    <div class="card-body">
        <div class="row">
            <div class="col-6">
                <h2 class="text-primary">Product List</h2>
            </div>
            <div class="col-6 text-right">
                <a asp-action="Create" class="btn btn-primary"><i class="fas fa-plus"></i> &nbsp;  Create New Product </a>
            </div>
        </div>
        <table id="tblData" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ProductName)
                    </th>

                    <th>
                        @Html.DisplayNameFor(model => model.ProductCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Image)
                    </th>
                    <th>
                        Buying Price
               @*          @Html.DisplayNameFor(model => model.DefaultBuyingPrice) *@
                    </th>
                    <th>
                        Category Name
                        @* @Html.DisplayNameFor(model => model.CategoryName) *@
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.SubCategory)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Brand)
                    </th>

                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.ProductCode)
                        </td>
                        <td>
                            @{
                                if(item.Image !=null)
                                {
                                    var base64 = Convert.ToBase64String(item.Image);
                                    var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                                    <img src="@imgsrc" width="160" height="90" />
                                }
                                else

                                {
                                    <img src="~/image/no_image.jpg" width="160" height="90" />

                                }

                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DefaultBuyingPrice)
                        </td>
                        <td>
                            @{
                                Category selectedCategory = category.FirstOrDefault(x => x.Id == item.SubCategory.CategoryId);
                                <span>@selectedCategory.Name</span>
                            }
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.SubCategory.Name)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Brand.BrandName)
                        </td>


                        <td>
                            <a asp-action="Edit" class="btn btn-success w-30" asp-route-id="@item.Id"><i class='far fa-edit'></i></a>

                            <a asp-action="Delete" class="btn btn-danger w-70" asp-route-id="@item.Id"><i class='far fa-trash-alt'></i></a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>