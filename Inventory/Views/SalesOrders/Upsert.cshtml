@model Inventory.Models.SalesOrder
@{
    var title = "Create Sales Order";

}
<div class="row">
    <div class="col-12">
        <h4>@title</h4>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card card-primary card-tabs">
            <div class="card-header p-0 pt-1">
                <ul class="nav nav-tabs" id="custom-tabs-five-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-tabs-five-overlay-tab" data-toggle="pill" href="#custom-tabs-five-overlay" role="tab" aria-controls="custom-tabs-five-overlay" aria-selected="true">Sales</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-five-normal-tab" data-toggle="pill" href="#custom-tabs-five-normal" role="tab" aria-controls="custom-tabs-five-normal" aria-selected="false">Details</a>
                    </li>
                </ul>
            </div>
            <form method="post" asp-action="Upsert">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @if (Model.SalesOrderId != 0)
                {
                    <input type="hidden" asp-for="SalesOrderId" />
                    title = "Edit Sales Order";
                }
                <div class="card-body">
                    <div class="tab-content" id="custom-tabs-five-tabContent">
                        <div class="tab-pane fade show active" id="custom-tabs-five-overlay" role="tabpanel" aria-labelledby="custom-tabs-five-overlay-tab">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="SalesOrderName" class="control-label"></label>
                                        <input asp-for="SalesOrderName" class="form-control" />
                                        @*  <input asp-for="PurchaseOrderName" placeholder="Generated automatically" class="form-control"/>
                                        <span asp-validation-for="PurchaseOrderName" class="text-danger"></span> *@
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="BranchId" class="control-label"></label>
                                        <input name="SelectedBranchId" id="SelectedBranchId" value="@Model.BranchId" class="d-none" />
                                        <select asp-for="BranchId" class="form-control">
                                            <option value="">--Please Select Branch--</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="CustomerId" class="control-label"></label>
                                        <input name="SelectedCustomerId" id="SelectedCustomerId" value="@Model.CustomerId" class="d-none" />
                                        <select asp-for="CustomerId" class="form-control">
                                            <option value="">--Please Select Customer--</option>
                                        </select>
                                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label asp-for="OrderDate" class="control-label"></label>
                                        <input asp-for="OrderDate" class="form-control" type="date" pattern="\d{4}-\d{2}-\d{2}" title="Please enter a valid date in the format YYYY-MM-DD" />
                                        <span asp-validation-for="OrderDate" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="DeliveryDate" class="control-label"></label>
                                        <input asp-for="DeliveryDate" class="form-control" type="date" pattern="\d{4}-\d{2}-\d{2}" title="Please enter a valid date in the format YYYY-MM-DD" />
                                        <span asp-validation-for="DeliveryDate" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="CurrencyId" class="control-label"></label>
                                        <input name="SelectedCurrencyId" id="SelectedCurrencyId" value="@Model.CurrencyId" class="d-none" />
                                        <select asp-for="CurrencyId" class="form-control">
                                            <option value="">--Please Select Currency--</option>

                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="SalesTypeId" class="control-label"></label>
                                        <input name="SelectedSalesTypeId" id="SelectedSalesTypeId" value="@Model.SalesTypeId" class="d-none" />
                                        <select asp-for="SalesTypeId" class="form-control">
                                            <option value="">--Please Select Sales Type--</option>
                                        </select>

                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="Freight" class="control-label"></label>
                                        <input asp-for="Freight" class="form-control" />
                                        <span asp-validation-for="Freight" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="Remarks" class="control-label"></label>
                                        <input asp-for="Remarks" class="form-control" />
                                        <span asp-validation-for="Remarks" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="CustomerRefNumber" class="control-label"></label>
                                        <input asp-for="CustomerRefNumber" class="form-control" />
                                        <span asp-validation-for="CustomerRefNumber" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="SubTotal" class="control-label"></label>
                                        <input asp-for="SubTotal" class="form-control" />
                                        <span asp-validation-for="SubTotal" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="Discount" class="control-label"></label>
                                        <input asp-for="Discount" class="form-control" />
                                        <span asp-validation-for="Discount" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="Tax" class="control-label"></label>
                                        <input asp-for="Tax" class="form-control" />
                                        <span asp-validation-for="Tax" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        <label asp-for="Amount" class="control-label"></label>
                                        <input asp-for="Amount" class="form-control" />
                                        <span asp-validation-for="Amount" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>

                            <div class="form-group row">
                                <div class="col-12">
                                    @if (Model.SalesOrderId != 0)
                                    {
                                        <partial name="_EditAndBackToListButton" model="Model.SalesOrderId" />
                                    }
                                    else
                                    {
                                        <partial name="_CreateAndBackToListButton" />
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="custom-tabs-five-normal" role="tabpanel" aria-labelledby="custom-tabs-five-normal-tab">
                            <button type="button" id="addProduct" class="btn btn-primary">Add Product</button>
                            <table class="table" id="productDetails">
                                <thead>
                                    <tr>
                                        <th>Serial No</th>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Quantity</th>
                                        <th>Amount</th>
                                        <th>Discount %</th>
                                        <th>Discount Amount</th>
                                        <th>Tax %</th>
                                        <th>Tax Amount</th>
                                        <th>Total</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="productDetails">
                                    <!-- This is where the dynamic rows will be added -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </form>
            <!-- /.card -->
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            loadBranch();
            loadCustomer();
            loadCurrency();
            loadSalesType();
            loadProduct();

        });
        function loadProduct() {
            $.ajax({
                type: "GET",
                url: "/Products/GetAll", // Replace with the correct URL
                success: function (data) {
                    // console.log(data);
                    var productDropdown = $("#ProductId");
                    productDropdown.empty();
                    productDropdown.append(
                        $('<option disabled selected></option>').val('').text('--Please Select Product--')
                    );
                    for (let index = 0; index < data.data.length; index++) {
                        const product = data.data[index];
                        productDropdown.append(
                            $('<option></option>').val(product.id).text(product.productName)
                        );
                    }
                },
                error: function (error) {
                    console.error("Error loading products: " + error);
                }
            });
        }
        function loadBranch() {
            $.ajax({
                type: "GET",
                url: "/Branches/GetAll", // Replace with the correct URL
                success: function (data) {
                    // console.log(data);
                    var branchDropdown = $("#BranchId");
                    var selectedValue = $("#SelectedBranchId").val();
                    branchDropdown.empty();
                    branchDropdown.append(
                        $('<option disabled selected></option>').val('').text('--Please Select Branch--')
                    );
                    for (let index = 0; index < data.data.length; index++) {
                        const branch = data.data[index];
                        var option = $('<option></option>').val(branch.id).text(branch.branchName);
                        if (branch.id == selectedValue) {
                            option.attr('selected', 'selected');
                        }
                        branchDropdown.append(option);
                    }
                },
                error: function (error) {
                    console.error("Error loading branches: " + error);
                }
            });
        }

        function loadCustomer() {
            $.ajax({
                type: "GET",
                url: "/Customers/GetAll", // Replace with the correct URL
                success: function (data) {
                    // console.log(data);
                    var customerDropdown = $("#CustomerId");
                    var selectedValue = $("#SelectedCustomerId").val();
                    customerDropdown.empty();
                    customerDropdown.append(
                        $('<option disabled selected></option>').val('').text('--Please Select Customer--')
                    );
                    for (let index = 0; index < data.data.length; index++) {
                        const customer = data.data[index];
                        console.log(customer);
                        var option = $('<option></option>').val(customer.customerId).text(customer.customerName);
                        if (customer.customerId == selectedValue) {
                            option.attr('selected', 'selected');
                        }
                        customerDropdown.append(option);
                    }
                },
                error: function (error) {
                    console.error("Error loading customer: " + error);
                }
            });
        }
        function loadCurrency() {
            $.ajax({
                type: "GET",
                url: "/Currencies/GetAll", // Replace with the correct URL
                success: function (data) {
                    // console.log(data);
                    var currencyDropdown = $("#CurrencyId");
                    var selectedValue = $("#SelectedCurrencyId").val();
                    currencyDropdown.empty();
                    currencyDropdown.append(
                        $('<option disabled selected></option>').val('').text('--Please Select currency--')
                    );
                    for (let index = 0; index < data.data.length; index++) {
                        const currency = data.data[index];
                        var option = $('<option></option>').val(currency.currencyId).text(currency.currencyName);
                        if (currency.currencyId == selectedValue) {
                            option.attr('selected', 'selected');
                        }
                        currencyDropdown.append(option);
                    }
                },
                error: function (error) {
                    console.error("Error loading purchase types: " + error);
                }
            });
        }
        function loadSalesType() {
            $.ajax({
                type: "GET",
                url: "/SalesTypes/GetAll", // Replace with the correct URL
                success: function (data) {
                    // console.log(data);
                    var salesTypeDropdown = $("#SalesTypeId");
                    var selectedValue = $("#SelectedSalesTypeId").val();
                    salesTypeDropdown.empty();
                    salesTypeDropdown.append(
                        $('<option disabled selected></option>').val('').text('--Please Select Sales Type--')
                    );
                    for (let index = 0; index < data.data.length; index++) {
                        const salesType = data.data[index];
                        var option = $('<option></option>').val(salesType.salesTypeId).text(salesType.salesTypeName);
                        if (salesType.salesTypeId == selectedValue) {
                            option.attr('selected', 'selected');
                        }
                        salesTypeDropdown.append(option);
                    }
                },
                error: function (error) {
                    console.error("Error loading sales types: " + error);
                }
            });
        }

        // Counter for dynamic row IDs
        var counter = 0;

        // Fetch products via AJAX
        function loadProductsIntoDropdown(callback) {
            $.ajax({
                url: '@Url.Action("GetAll", "Products")',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    callback(data);
                }
            });
        }

        // Add product options to the dropdown
        function addProductOptionsToDropdown(dropdown, products) {
            dropdown.empty();
            dropdown.append($('<option>').val('').text('Select Product'));
            $.each(products.data, function (index, product) {
                dropdown.append($('<option>').val(product.id).text(product.productName).data('price', product.defaultSellingPrice));
            });
        }

        // Update price and calculate total when product or quantity changes
        function updatePriceAndTotal(row) {

            var quantity = parseFloat(row.find('.quantity').val()) || 0;
            var price = parseFloat(row.find('.product-dropdown option:selected').data('price')) || 0;
            var amount = parseFloat(row.find('.amount').val()) || 0;
            var discount = parseFloat(row.find('.discount').val()) || 0;
            var discountAmount = parseFloat(row.find('.discount').val()) || 0;
            var tax = parseFloat(row.find('.tax').val()) || 0;
            var taxAmount = parseFloat(row.find('.tax').val()) || 0;

            var amount = (quantity * price);
            var discountAmount = amount * (discount / 100);
            var taxAmount = (quantity * price) * (tax / 100);
            var total = amount * (1 - discount / 100) * (1 + tax / 100);

            row.find('.price').text(price.toFixed(2));
            row.find('.amount').text(amount.toFixed(2));
            row.find('.discountAmount').text(discountAmount.toFixed(2));
            row.find('.taxAmount').text(taxAmount.toFixed(2));
            row.find('.total').text(total.toFixed(2));

            updateTotalAmount();

        }
        function updateTotalAmount() {
            var total = 0;
            var totalDiscountAmount = 0;
            var totalTaxAmount = 0;
            var grandTotal = 0;

            $("#productDetails tbody tr").each(function () {
                var amount = parseFloat($(this).find('.amount').text()) || 0;
                var discountAmount = parseFloat($(this).find('.discountAmount').text()) || 0;
                var taxAmount = parseFloat($(this).find('.taxAmount').text()) || 0;
                var totalForRow = parseFloat($(this).find('.total').text()) || 0;

                total += amount;
                totalDiscountAmount += discountAmount;
                totalTaxAmount += taxAmount;
                grandTotal += totalForRow;
            });

            // Display the total tax amount (you can use this value as needed)
            console.log('Total Tax Amount:', totalTaxAmount);

            $("#SubTotal").val(total.toFixed(2));
            $("#Discount").val(totalDiscountAmount.toFixed(2));
            $("#Tax").val(totalTaxAmount.toFixed(2));
            $("#Amount").val(grandTotal.toFixed(2));
        }

        $("#addProduct").click(function () {
            // Load products into dropdown
            loadProductsIntoDropdown(function (products) {
                var newRow = $("<tr>");
                var cols = "";
                // Serial No column
                cols += '<td>' + (counter + 1) + '</td>';

                // Rest of the columns
                cols += '<td><select name="SalesOrderLines[' + counter + '].ProductId" class="form-control product-dropdown"></select></td>';
                cols += '<td><span class="price"></span></td>';
                cols += '<td><input type="text" name="SalesOrderLines[' + counter + '].Quantity" class="form-control quantity" /></td>';
                cols += '<td><span class="amount"></span></td>';
                cols += '<td><input type="text" name="SalesOrderLines[' + counter + '].DiscountPercentage" class="form-control discount" /></td>';
                cols += '<td><span name="SalesOrderLines[' + counter + '].DiscountAmount" class="form-control discountAmount" ></span></td>';
                cols += '<td><input type="text" name="SalesOrderLines[' + counter + '].TaxPercentage" class="form-control tax" /></td>';
                cols += '<td><span class="taxAmount"></span></td>';
                cols += '<td><span class="total"></span></td>';
                cols += '<td><button type="button" class="ibtnDel btn btn-danger">Delete</button></td>';

                newRow.append(cols);

                $("#productDetails").append(newRow);

                // Populate the product dropdown
                var productDropdown = newRow.find('.product-dropdown');
                addProductOptionsToDropdown(productDropdown, products);

                // Event handler for changes in product or quantity
                productDropdown.change(function () {
                    updatePriceAndTotal(newRow);
                });

                newRow.find('.quantity, .discount, .tax').change(function () {
                    updatePriceAndTotal(newRow);
                });
                counter++;
            });
        });

        $("#productDetails").on("click", ".ibtnDel", function (event) {
            $(this).closest("tr").remove();
            counter -= 1;
            $("#productDetails tbody tr").each(function (index) {
                $(this).find('td:first').text(index + 1);
            });
        });

    </script>
}